{"version":3,"sources":["images/Expertly/expertly_main_page.png","images/TheCursed/background.png","images/Precarious/precarious_gameplay.png","images/Choose/choose.png","images/About/james.jpg","images/home/Hdlogo.png","containers/NavBar.js","components/PostSnipCard.js","containers/BlogList.js","containers/ProjectList.js","components/About.js","components/Home.js","components/Post.js","containers/MainBody.js","constants.js","components/AdminLogin.js","components/NewPost.js","components/AdminPostSnipCard.js","components/AdminBlogList.js","components/EditPost.js","containers/Admin.js","App.js","store.js","serviceWorker.js","index.js"],"names":["module","exports","NavBar","dispatch","useDispatch","className","onClick","type","href","target","rel","size","PostSnipCard","props","post","editorState","EditorState","createWithContent","convertFromRaw","JSON","parse","content","postContent","getCurrentContent","getPlainText","key","id","date_pretty","title","substring","currentPost","BlogList","showBlogList","useSelector","state","sortedPosts","posts","sort","a","b","map","ProjectList","showProjectList","Fragment","src","require","alt","About","showAbout","Home","showHome","Post","showPost","readOnly","MainBody","BACKEND_URL","AdminLogin","useState","username","setUsername","password","setPassword","logIn","user","fetch","credentials","method","headers","accept","body","stringify","response","json","currentUser","onSubmit","event","preventDefault","onChange","value","placeholder","NewPost","setTitle","createEmpty","setEditorState","submitPost","e","date","now","Date","year","getFullYear","month","getMonth","day","getDate","formatted","pretty","toLocaleDateString","generateDate","newPost","date_formatted","convertToRaw","user_id","createPost","onEditorStateChange","toolbarClassName","wrapperClassName","editorClassName","AdminPostSnipCard","AdminBlogList","EditPost","loggedIn","selectedPost","editPost","updatedPost","deletePost","alert","defaultEditorState","Admin","newBlogPost","useEffect","handleLogout","App","exact","path","component","store","createStore","currentState","action","filter","showExpertly","showSelectedBlog","window","__REDUX_DEVTOOLS_EXTENSION__","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4b9a96ad.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/expertly_main_page.107c4246.png\";","module.exports = __webpack_public_path__ + \"static/media/background.a53905aa.png\";","module.exports = __webpack_public_path__ + \"static/media/precarious_gameplay.a7f56b6f.png\";","module.exports = __webpack_public_path__ + \"static/media/choose.fb5f718a.png\";","module.exports = __webpack_public_path__ + \"static/media/james.df2f24a7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Hdlogo.0ae3cc77.png\";","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {MarkGithubIcon, HomeFillIcon, CodeSquareIcon, NoteIcon, InfoIcon} from '@primer/octicons-react'\n\n\nfunction NavBar() {\n  let dispatch = useDispatch()\n  return (\n    <div className='nav'>\n        <div className='nav_icon' onClick={() => dispatch({type: \"SHOW_HOME\"})}>Home</div>\n        <div className='nav_icon' onClick={() => dispatch({type: \"SHOW_ABOUT\"})}>About</div>\n        <div className='nav_icon' onClick={() => dispatch({type: \"SHOW_BLOG_LIST\"})}>Blog</div>\n        <div className='nav_icon' onClick={() => dispatch({type: \"SHOW_PROJECT_LIST\"})}>Projects</div>\n        <a className='nav_icon' href='https://github.com/jamesjlandry' target=\"_blank\" rel=\"noopener noreferrer\" ><MarkGithubIcon size={16}/></a>\n    </div>\n  );\n}\n\nexport default NavBar;","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { EditorState, ContentState, convertFromRaw } from 'draft-js';\n\n\nexport default function PostSnipCard (props) {\n    const post = props.post\n    let editorState = EditorState.createWithContent(convertFromRaw(JSON.parse(post.content)))\n    const dispatch = useDispatch()\n    let postContent = editorState.getCurrentContent()\n    postContent = postContent.getPlainText()\n   \n    return (\n        <div>\n <div className='blog_snip' key={post.id}>\n          <div className='blog_date'>\n            {post.date_pretty}\n          </div>\n          <div>\n            {post.title}\n          </div>\n          <div className='blog_snip_paragraph'>\n            {postContent.substring(0, 200)}...\n          </div>\n          <div className='read_more' onClick={()=> dispatch({type: 'SHOW_POST', currentPost: post})}>Read More -</div>\n        </div>\n        </div>\n    )\n}\n\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { EditorState, ContentState } from 'draft-js';\nimport PostSnipCard from '../components/PostSnipCard';\n\n\nfunction BlogList() {\n    const showBlogList = useSelector(state => state.showBlogList)\n    const posts = useSelector(state => state.posts)\n    const sortedPosts = posts.sort((a,b) => b.id - a.id);\n    \n  return (\n    <div >\n     {showBlogList ?\n    <div className='blog_container'>\n        {sortedPosts.map(post => <PostSnipCard key={post.id} post={post}/>)}\n      </div> \n    :\n    null\n    }\n    </div>\n  );\n}\n\nexport default BlogList;","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\n\nfunction ProjectList() {\n  const showProjectList = useSelector(state => state.showProjectList)\n  \n  return (\n    <React.Fragment >\n       {showProjectList ?\n      <div className=\"project_list\">\n        <div className=\"project_background\"></div>\n        <div className='project_card' >\n          <img src={require('../images/Expertly/expertly_main_page.png')} alt='Expertly Home Page'></img>\n          <div className='expertly_card'><strong><h1>Expertly</h1></strong></div>\n          <div className='project_info'>\n            <p>Ask questions with confidence. Get answers from real experts in their field. </p><a href='https://github.com/jamesjlandry/expertly_front_end' target=\"_blank\" rel=\"noopener noreferrer\" >GitHub Repo</a>\n          </div>\n        </div> \n        <div className='project_card' >\n        <img src={require('../images/TheCursed/background.png')} alt='The Cursed Home Page'></img>\n          <div className='cursed_card'><strong><h1>The Cursed</h1></strong></div>\n          <div className='project_info'>\n            <p>TableTop Roleplaying for the modern age. Build your character. Level them up. Try to take over the world. </p><a href='https://youtu.be/xLv1ZAYcieI' target=\"_blank\" rel=\"noopener noreferrer\" >YouTube Demo</a>\n          </div>\n        </div> \n        <div className='project_card' >\n          <img src={require('../images/Precarious/precarious_gameplay.png')} alt='Precarious Game'></img>\n          <div className='precarious_card'><strong><h1>Precarious!</h1></strong></div>\n          <div className='project_info'>\n            <p>Be the first to buzz in and win the points in this real time quiz game optimized for mobile. </p>\n            <a href='https://github.com/jamesjlandry/precarious' target=\"_blank\" rel=\"noopener noreferrer\" >GitHub Repo</a>\n            <a className=\"website_anchor\" href='https://dry-depths-01460.herokuapp.com/' target=\"_blank\" rel=\"noopener noreferrer\" >Website</a>\n          </div>\n        </div> \n        <div className='project_card' >\n          <img src={require('../images/Choose/choose.png')} alt='Choose Your Own Adventure Game'></img>\n          <div className='choose_adventure_card'><strong><h1>Choose Your Own<br></br> Adventure</h1></strong></div>\n          <div className='project_info'>\n            <p>Choose your own adventure CLI app for the Self Join table connoisseur. </p><a href='https://github.com/jamesjlandry/mod_1_project_choose_your_adventure' target=\"_blank\" rel=\"noopener noreferrer\" >GitHub Repo</a>\n          </div>\n        </div> \n      <div>\n      \n    </div> \n    </div>\n    :\n    null\n    }\n    </React.Fragment>\n  );\n}\n\nexport default ProjectList;","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\n\nfunction About() {\n\n  const showAbout = useSelector(state => state.showAbout)\n\n  return (\n    <div  >\n      { showAbout ?\n      <div className='about'>\n        <div>\n        <h2>Hi. I'm James.</h2>\n        <h2>I'm a junior full stack web developer.</h2> \n        <p>After spending 12 years as a people leader with a penchant for creative problem solving, I'm turning my creativity towards Software Development.</p>\n        </div>\n        <img src={require('../images/About/james.jpg')} alt='James Landry'></img>\n      </div>\n      :\n      null\n      }\n    </div>\n  );\n}\n\nexport default About;","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\n\nfunction Home() {\n\n  const dispatch = useDispatch()\n  const showHome = useSelector(state => state.showHome)\n\n  return (\n    <div  >\n    {showHome ? \n    <div className='home_page' > <br></br>\n    <img src={require('../images/home/Hdlogo.png')} alt='Hopeful Dev logo'></img>\n    <h2>Hopeful Dev</h2>\n    <br></br>\n    <div>Developer</div>\n    <br></br>\n    <div>Leader</div>\n    <br></br>\n    <div>Artist</div>\n    </div>\n    \n\n    :\n    null}\n    </div>\n  );\n}\n\nexport default Home;","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport {  Editor, EditorState, convertFromRaw } from 'draft-js';\nfunction Post() {\n\n  const currentPost = useSelector(state => state.currentPost)\n  const showPost = useSelector(state => state.showPost)\n  \n  if(showPost === false) {\n    return null\n  }\n\n  let editorState = EditorState.createWithContent(convertFromRaw(JSON.parse(currentPost.content)))\n\n  return (\n    <React.Fragment>\n      {\n        showPost ?\n    <div className='blog_container' >\n      <div className={'post_title'}>\n        <strong>{currentPost.title}</strong>\n      </div>\n      <br></br>\n      <Editor \n        editorState={editorState}\n        readOnly= \"true\"\n      />\n        \n        \n    </div>\n    :\n    null\n      }\n    </React.Fragment>\n  );\n}\n\nexport default Post;","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport BlogList from './BlogList'\nimport ProjectList from './ProjectList'\nimport About from '../components/About'\nimport Home from '../components/Home'\nimport Post from '../components/Post'\n\nfunction MainBody() {\n  \n  let dispatch = useDispatch()\n  return (\n    <div className=\"main_body\">\n      <BlogList/>\n      <ProjectList/>\n      <Post />\n      <About/>\n      <Home />\n    \n    </div>\n  );\n}\n\nexport default MainBody;","export const BACKEND_URL = process.env.NODE_ENV === 'production' ? 'http://www.hopefuldev.life/' : 'http://localhost:3000'","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useState } from 'react'\nimport { BACKEND_URL } from '../constants'\n\nfunction AdminLogin() {\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch()\n\n\n\n\n\n let logIn = async (user) => {\n   let response = await fetch(`${BACKEND_URL}/login`, {\n       credentials: 'include',\n       method: \"POST\",\n       headers: {\n           accept: 'application/json',\n           'content-type': 'application/json'\n       },\n       body: JSON.stringify(user)\n   })\n   let currentUser = await response.json()\n   if (currentUser !== null) {\n       dispatch({type: \"SET_LOG_IN\", currentUser: currentUser})\n      \n    }\n    }\n\n    let handleSubmit = (e) => {\n      e.preventDefault();\n      let user = {\n          username: username,\n          password: password,\n      }\n      logIn(user)\n      }\n  return (\n    <div className=\"page_background_blur\">\n     <form className='login_box' onSubmit={event => handleSubmit(event)}>\n       <h1>HopefulDevLife</h1>\n        <input\n            onChange={event => setUsername(event.target.value)}\n            id='username'\n            placeholder='enter username'\n            type='text'\n            value={username}\n        />\n          <input\n              onChange={event => setPassword(event.target.value)} \n              id=\"password\" \n              placeholder=\"password\"\n              type=\"password\" \n              value={password}\n          />\n\n          <div>\n                <button type=\"submit\">Make It So</button>\n          </div>\n     </form>\n\n\n    </div>\n  );\n}\n\nexport default AdminLogin;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { BACKEND_URL } from '../constants'\nimport {  EditorState, convertToRaw } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\n\n\n\nfunction NewPost() {\n    const dispatch = useDispatch() \n    const user = useSelector(state => state.currentUser) \n    const [title, setTitle] = useState('')\n    const [editorState, setEditorState] = useState(\n      () => EditorState.createEmpty(),\n    );\n\n     const generateDate = () => {\n      const now = new Date();\n      const options = { month: \"long\", day: \"numeric\", year: \"numeric\" };\n  \n      const year = now.getFullYear();\n  \n      let month = now.getMonth() + 1;\n      if (month < 10) {\n        month = `0${month}`;\n      }\n  \n      let day = now.getDate();\n      if (day < 10) {\n        day = `0${day}`;\n      }\n  \n      return {\n        formatted: `${year}-${month}-${day}`,\n        pretty: now.toLocaleDateString(\"en-US\", options)\n      };\n    };\n\n    const submitPost = (e) => {\n      e.preventDefault();\n      const date = generateDate();\n      const newPost = {\n        title: title,\n        date_formatted: date.formatted,\n        date_pretty: date.pretty,\n        content: JSON.stringify(convertToRaw(editorState.getCurrentContent())),\n        user_id: user.id\n      };\n      createPost(newPost)\n       \n    };\n\n      let createPost = async (post) => {\n        let response = await fetch(`${BACKEND_URL}/posts`, {\n            credentials: 'include',\n            method: \"POST\",\n            headers: {\n                accept: 'application/json',\n                'content-type': 'application/json'\n            },\n            body: JSON.stringify(post)\n        })\n        let newPost = await response.json()\n         dispatch({type: \"ADD_POST\", post: newPost})\n         }\n\n   \n     \n\n  return (\n    <div className='page_background_blur'>\n    <div className='post_form'>\n      <button type='button' onClick={() => dispatch({type: 'NEW_BLOG_FALSE'})}>\n         Close Form\n       </button>\n      \n       <form onSubmit={event => submitPost(event)}>\n         <div className=\"blog_title\" >\n          <div>\n           \n          </div>\n          <input\n            placeholder=\"title\"\n            id=\"title-field\"\n            type=\"text\"\n            value={title}\n            onChange={({ target: { value } }) => {\n              setTitle(value);\n            }}\n          />\n          </div>\n          <div className=\"blog_content\">\n            <div>\n          \n          </div>\n          <Editor \n            editorState={editorState} \n            onEditorStateChange={setEditorState} \n            toolbarClassName=\"toolbarClassName\"\n            wrapperClassName=\"wrapperClassName\"\n            editorClassName=\"editorClassName\"\n            placeholder=\"Write something\"\n          />\n         \n          </div>\n          \n          <button type=\"submit\">Make It So</button>\n        </form>\n    </div>\n    </div>\n  );\n}\n\nexport default NewPost;","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { EditorState,  convertFromRaw } from 'draft-js';\n\n\nexport default function AdminPostSnipCard (props) {\n    const post = props.post\n    let editorState = EditorState.createWithContent(convertFromRaw(JSON.parse(post.content)))\n    const dispatch = useDispatch()\n    let postContent = editorState.getCurrentContent()\n    postContent = postContent.getPlainText()\n    return (\n        <div>\n <div className='blog_snip' key={post.id}>\n          <div className='blog_date'>\n            {post.date_pretty}\n          </div>\n          <div>\n            {post.title}\n          </div>\n          <div className='blog_snip_paragraph'>\n            {postContent.substring(0, 200)}...\n          </div>\n          <button type='button' onClick={()=> dispatch({type: \"EDIT_CURRENT_POST\", currentPost: post})}>Edit Post</button>\n        </div>\n        </div>\n    )\n}","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport AdminPostSnipCard from '../components/AdminPostSnipCard'\n\n\nfunction AdminBlogList() {\n\n  const posts = useSelector(state => state.posts)\n  const dispatch = useDispatch()\n\n\n\n  return (\n    \n    <div className='admin_blog_container'>\n        {posts.map(post => <AdminPostSnipCard post={post}/>)}\n      </div> \n  );\n}\n\nexport default AdminBlogList;","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { BACKEND_URL } from '../constants'\nimport {  EditorState, convertToRaw, convertFromRaw } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\n\nfunction EditPost() {\n\n  const loggedIn = useSelector(state => state.loggedIn)\n  const user = useSelector(state => state.currentUser) \n  const currentPost = useSelector(state => state.currentPost)\n  const dispatch = useDispatch()\n  const [title, setTitle] = useState(currentPost.title)\n  const [editorState, setEditorState] = useState(() => EditorState.createEmpty())\n  let selectedPost = EditorState.createWithContent(convertFromRaw(JSON.parse(currentPost.content)))\n\n const submitPost = (e, currentPost) => {\n    e.preventDefault();\n    const updatedPost = {\n      title: title,\n      \n      content: JSON.stringify(convertToRaw(editorState.getCurrentContent())),\n      user_id: user.id\n    };\n    editPost(updatedPost, currentPost)\n     \n  };\n\n  let editPost = async (post, currentPost) => {\n    let response = await fetch(`${BACKEND_URL}/posts/${currentPost.id}`, {\n        credentials: 'include',\n        method: \"PATCH\",\n        headers: {\n            accept: 'application/json',\n            'content-type': 'application/json'\n        },\n        body: JSON.stringify(post)\n    })\n    let updatedPost = await response.json()\n     dispatch({type: \"UPDATE_POST\", post: updatedPost})\n     }\n\n    let deletePost = async (currentPost) => {\n      let response = await fetch(`${BACKEND_URL}/posts/${currentPost.id}`, {\n          credentials: 'include',\n          method: \"DELETE\",\n          headers: {\n              accept: 'application/json',\n              'content-type': 'application/json'\n          },\n          body: JSON.stringify(currentPost)\n      })\n      let result = await response.json()\n      if (result === 'success') {\n       dispatch({type: \"DELETE_POST\", post: currentPost\n       })\n      } else {\n        alert(\"post not deleted\")\n      }\n    }\n  \n  return (\n   <div>\n     {loggedIn ?\n      <div className='page_background_blur'>\n        \n      <div className='post_form'>\n        <button type='button' onClick={() => dispatch({type: 'EDIT_BLOG_FALSE'})}>\n           Changed My Mind, Close Form\n         </button>\n         <form onSubmit={event => submitPost(event, currentPost)}>\n           <div className=\"blog_title\" >\n            <div>\n             \n            </div>\n            <input\n              \n              id=\"title-field\"\n              type=\"text\"\n              value={title}\n              onChange={({ target: { value } }) => {\n                setTitle(value);\n              }}\n            />\n            </div>\n            <div className=\"blog_content\">\n              <div>\n           \n            </div>\n            <Editor \n            \n            defaultEditorState={selectedPost} \n            onEditorStateChange={setEditorState} \n            toolbarClassName=\"toolbarClassName\"\n            wrapperClassName=\"wrapperClassName\"\n            editorClassName=\"editorClassName\"\n          />\n            </div>\n            <button type=\"submit\">Make It So</button>\n            <button type=\"button\" onClick={()=> deletePost(currentPost)}>Delete this sucker</button>\n          </form>\n      </div>\n      </div>\n    : \n        null\n    }\n     \n    </div>\n  );\n}\n\nexport default EditPost;","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport BlogList from './BlogList'\nimport ProjectList from './ProjectList'\nimport About from '../components/About'\nimport AdminLogin from '../components/AdminLogin'\nimport NewPost from '../components/NewPost'\nimport AdminBlogList from '../components/AdminBlogList'\nimport EditPost from '../components/EditPost'\nimport { BACKEND_URL } from '../constants'\nimport 'draft-js/dist/Draft.css';\n\n// checks for the site admin as the only user created. if the admin is not logged in, shows login box\n// otherwise the admin can make new blog posts and edit current posts from this page.\n\nfunction Admin() {\n\n  const loggedIn = useSelector(state => state.loggedIn)\n  const newBlogPost = useSelector(state => state.newBlogPost)\n  const editPost = useSelector(state => state.editPost)\n  const dispatch = useDispatch()\n\n    useEffect( async () => {\n      let response = await fetch(`${BACKEND_URL}/logged_in`, {\n            credentials: 'include',\n            \n        })\n        \n        let currentUser = await response.json()\n        if (currentUser !== null) {\n            dispatch({type: \"SET_LOG_IN\", currentUser: currentUser})\n        } \n    }, [])\n\n    const handleLogout = async () => {\n      let response = await fetch(`${BACKEND_URL}/log_out`, {\n          credentials: 'include',\n          method: 'DELETE'\n      })\n      let loggedOut = await response.json()\n      dispatch({type: \"LOG_OUT\" })\n    }\n \n  return (\n    <div >\n     {loggedIn ? \n     <div className=\"Admin\" >\n       <button className='log_out' type='button' onClick={() => handleLogout()}>Log Out</button>\n       \n       {newBlogPost ?\n       <NewPost />\n      :\n      <div className='new_post_div'>\n      <button className='new_post' type='button' onClick={() => dispatch({type: 'NEW_BLOG_TRUE'})}>\n        <strong>New Post</strong> \n       </button>\n       </div>\n      }\n      {editPost ? \n        <EditPost />\n      :\n      null\n      }\n       <AdminBlogList /> \n     </div>\n     :\n     <AdminLogin/>}\n    </div>\n  );\n}\n\nexport default Admin;","import React, { useEffect} from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom'\nimport { useDispatch } from 'react-redux';\nimport NavBar from './containers/NavBar';\nimport MainBody from './containers/MainBody';\nimport Admin  from './containers/Admin';\nimport { BACKEND_URL } from './constants'\n\n\n\n\nfunction App() {\n\n  const dispatch = useDispatch()\n\n  useEffect( async () => {\n    let response = await fetch(`${BACKEND_URL}/posts`)\n    let posts = await response.json()\n    dispatch({type: \"SET_POSTS\", posts: posts})\n   \n  },[])\n\n  return (\n    <div className=\"App\">\n      <NavBar/>\n      <MainBody/>\n      <BrowserRouter>\n        <Route exact path='/admin' component={Admin} />\n        \n       \n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;","import {createStore, bindActionCreators} from 'redux';\n\nconst reducer = (currentState, action) => {\n    if (action.type === \"SET_LOG_IN\") {\n        return {\n            ...currentState,\n            loggedIn: true,\n            showBlogList: false,\n            showAbout: false,\n            showProjectList: false,\n            showHome: false,\n            showPost: false,\n            currentUser: action.currentUser\n        }\n    }\n\n    if (action.type === \"LOG_OUT\") {\n        return {\n            ...currentState,\n            loggedIn: false\n        }\n    }\n\n    if (action.type === \"SET_POSTS\") {\n        return {\n            ...currentState,\n            posts: action.posts\n        }\n    }\n\n    if (action.type === \"EDIT_CURRENT_POST\") {\n        return {\n            ...currentState,\n            currentPost: action.currentPost,\n            editPost: true\n        }\n    }\n\n    if (action.type === \"ADD_POST\") {\n        return {\n            ...currentState,\n            posts: [...currentState.posts, action.post],\n            newBlogPost: false\n        }\n    }\n\n    if (action.type === \"UPDATE_POST\") {\n        return {\n            ...currentState,\n            posts: currentState.posts.map(post => post.id === action.post.id ? \n                {...post, title: action.post.title, content: action.post.content} :\n                post),\n            editPost: false\n        }\n    }\n\n    if (action.type === \"DELETE_POST\") {\n        return {\n            ...currentState,\n            posts: currentState.posts.filter(post => post.id !== action.post.id),\n            editPost: false\n        }\n    }\n\n    if (action.type === \"NEW_BLOG_TRUE\") {\n        return {\n            ...currentState,\n            newBlogPost: true\n        }\n    }\n\n    if (action.type === \"NEW_BLOG_FALSE\") {\n        return {\n            ...currentState,\n            newBlogPost: false\n        }\n    }\n\n    if (action.type === \"EDIT_BLOG_FALSE\") {\n        return {\n            ...currentState,\n            editPost: false\n        }\n    }\n\n    if (action.type === \"SHOW_BLOG_LIST\") {\n        return {\n            ...currentState,\n            showBlogList: true,\n            showAbout: false,\n            showProjectList: false,\n            showHome: false,\n            showExpertly: false,\n            showPost: false\n        }\n    }\n\n    if (action.type === \"SHOW_PROJECT_LIST\") {\n        return {\n            ...currentState,\n            showBlogList: false,\n            showAbout: false,\n            showProjectList: true,\n            showHome: false,\n            showExpertly: false,\n            showPost: false\n        }\n    }\n\n    if (action.type === \"SHOW_ABOUT\") {\n        return {\n            ...currentState,\n            showBlogList: false,\n            showAbout: true,\n            showProjectList: false,\n            showHome: false,\n            showExpertly: false,\n            showPost: false\n        }\n    }\n\n    if (action.type === \"SHOW_HOME\") {\n        return {\n            ...currentState,\n            showBlogList: false,\n            showAbout: false,\n            showProjectList: false,\n            showHome: true,\n            showExpertly: false,\n            showPost: false\n        }\n    }\n\n    if (action.type === \"SHOW_POST\") {\n        return {\n            ...currentState,\n            showBlogList: false,\n            showAbout: false,\n            showProjectList: false,\n            showHome: false,\n            showPost: true,\n            showExpertly: false,\n            currentPost: action.currentPost\n        }\n    }\n\n    if (action.type === \"SHOW_EXPERTLY\") {\n        return {\n            ...currentState,\n            showBlogList: false,\n            showAbout: false,\n            showProjectList: false,\n            showHome: false,\n            showPost: false,\n            showExpertly: true,\n            \n        }\n    }\n\n    return currentState\n\n}\n\nlet initialState = {\n    currentUser: {},\n    currentPost: {},\n    showAbout: false,\n    showBlogList: false,\n    showPost: false,\n    showProjectList: false,\n    showExpertly: false,\n    showSelectedBlog: false,\n    newBlogPost: false,\n    editPost: false,\n    showHome: true,\n    loggedIn: false,\n    posts: [],\n\n}\n\nconst store = createStore(reducer, initialState, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\nwindow.store = store\n\nexport default store","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './store'\nimport {Provider} from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n  \n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}